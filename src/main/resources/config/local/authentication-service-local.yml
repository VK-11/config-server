spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8180/realms/sg_dev
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1.0
  datasource:
    platform: postgres
    url: jdbc:postgresql://localhost:5432/authentication_service?currentSchema=authentication_service
    username: admin
    password: admin
    driver-class-name: org.postgresql.Driver
    initialization-mode: always
    continue-on-error: false
    hikari:
      connection-timeout: 20000 #maximum number of milliseconds that a client will wait for a connection
      minimum-idle: 3 #minimum number of idle connections maintained by HikariCP in a connection pool
      maximum-pool-size: 3 #maximum pool size
      idle-timeout: 10000 #maximum idle time for connection
      max-lifetime: 1000 # maximum lifetime in milliseconds of a connection in the pool after it is closed.
  jpa:
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
    show-sql: false
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: false
  liquibase:
    change-log: classpath:/db/changelog/changelog-master.xml
    default-schema: authentication_service

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      customer-client:
        registerHealthIndicator: true
        event-consumer-buffer-size: 10
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
  timelimiter:
    instances:
      customer-client:
        timeout-duration: 3s
  retry:
    instances:
      customer-client:
        max-attempts: 3
        wait-duration: 5s

otp:
  sign-in:
    key: X4MMfozeICe
  expire:
    mins: 5
  lock-interval:
    hours: 1
  retry-interval:
    secs: 120
  max-failed-attempts: 4

keycloak:
  port: 8180
  realm: sg_dev
  client:
    marketplace:
      id: sg_marketplace
      secret: OkfzP0KiyU58MyCFVumYhJJ8X4Bcrv5k
    employee:
      id: sg_client
      secret: gW6PVmQtYBc7hCKVqk9iHkSpMRD8Pp8g
    perdix:
      id: test
      secret: test
    sensei:
      id: test
      secret: test
  grant-type:
    employees: password
    clients: client_credentials
  token:
    expiry:
      secs: 86400

karix:
  sms:
    sender:
      id: SARVAF
      template:
        id: 1007919417365128278
        text: Your One time password to verify your identity to log into SavraGram is {0}. Only valid for {1} mins
      entity:
        id: 1001294691716281513

portal:
  cloud:
    keycloak:
      base-uri: http://localhost:${keycloak.port}/realms/${keycloak.realm}
      token-relative-uri: /protocol/openid-connect/token
    karza:
      base-uri: https://testapi.karza.in/v2/mobile
      x-api-key: x-karza-key
      api-key: QA2Qx8exv85lwrc7CIOS
      send-otp-relative-uri: /otp
      verify-otp-relative-uri: /status
      profile-details-relative-uri: /details
    karix:
      base-uri: https://test.sarvagram.com/service/utils/sms
    customer:
      base-uri: https://test-customer-service.sarvagram.com/customer
      check-user-relative-uri: /check-user
      login-info-relative-uri: /login-info
    memcached:
      host: localhost
      port: 11211
